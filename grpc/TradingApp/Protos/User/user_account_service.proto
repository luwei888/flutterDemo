syntax = "proto3"; 


package TradingApp.GrpcService.App.User.Account;

import "grpc/TradingApp/Protos/Common/common_model.proto";
import "grpc/TradingApp/Protos/User/user_account_model.proto";

//业务流App 手机注册账户 自有账户
//=》ExistsPhoneNumber|检查是否已注册用户
//=》VerifyPhoneNumber|验证手机号有效性
//=》CheckVerifyCode|验证验证码有效性
//=》RegisterAccount|注册账户
//流程结束

//业务流App 邮箱注册账户 自有账户
//=》ExistsPhoneNumber|检查是否已注册用户
//=》VerifyPhoneNumber|验证邮箱有效性
//=》CheckVerifyCode|验证验证码有效性
//=》RegisterAccount|注册账户
//流程结束

//业务流App 找回密码
//=》ExistsPhoneNumber|检查是否已注册用户
//=》VerifyPhoneNumber|获取修改密码短信验证码，类型找回密码
//=》CheckVerifyCode|验证验证码有效性
//=》ResetPassword|修改密码
//结束流程

//业务流App 修改密码
//=》UpdatePassword|修改密码
//流程结束

service UserAccountService {

  //退出登录
  rpc SignOut (SignOutReq) returns (SignOutResp);

  //上传头像 
  rpc UploadAvatar (stream UploadAvatarRequest) returns (UploadAvatarReply);

  //修改用户信息
  rpc EditUserInfo (EditUserInfoRequest) returns (EditUserInfoReply);

  //获取用户信息IDS
  rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoReply);

    //获取用户信息UId
  rpc GetUserInfoByUserId (GetUserInfoByUserIdRequest) returns (GetUserInfoByUserIdReply);

  //检查当前令牌是否有效
  rpc CheckToken(CheckTokenReq) returns (CheckTokenResp);

    //获取用户的开户进度信息
  rpc GetAccountProgress(GetAccountProgressRequest) returns (GetAccountProgressReply);

  //处理旧数据 - 修正从Email过来的用户名
  rpc FixUserNameFromEmail(FixUserNameFromEmailReq) returns (FixUserNameFromEmailResp);

  //初始化旧数据 - 初始化最近登录时间
  rpc InitLastLoginTime(InitLastLoginTimeReq) returns (InitLastLoginTimeResp);
}

// 请求 - 注销登录
message SignOutReq{
    string PushDeviceId = 5;  //推送组件设备Id（极光注册id）
}

// 响应 - 注销登录
message SignOutResp{
    
}

//获取用户信息
message GetUserInfoRequest{
       string IdsID=1;
}

message GetUserInfoReply{
   //手机号码
   string PhoneNumber = 1;
   //用户姓名
   string UserName = 2;
   //邮箱
   string Email = 3;
   //性别
   GenderType Gender = 4;
   /// 个性签名
   string Autograph = 5;
   /// 头像URL
   string Avatar = 6;
   //是否交易员
   bool Is_Trader = 7;
   //所在位置
   string Location = 8;
}


//获取用户信息
message GetUserInfoByUserIdRequest{
       string UserId=1;
}

message GetUserInfoByUserIdReply{
   //手机号码
   string PhoneNumber = 1;
   //用户姓名
   string UserName = 2;
   //邮箱
   string Email = 3;
   //性别
   GenderType Gender = 4;
   /// 个性签名
   string Autograph = 5;
   /// 头像URL
   string Avatar = 6;
   //是否交易员
   bool Is_Trader = 7;
   //所在位置
   string Location = 8;
}

// 请求 - 上传头像
message UploadAvatarRequest{
    bytes AvatarChunk = 1;  //数据块
    string ContentType = 2; //内容类型（mime）
}

// 响应 - 上传头像
message UploadAvatarReply{
    string Avatar = 1;  //头像URL
    int32 Integral = 2; //积分（首次设置用户姓名时返回对应积分，其他情况返回 0）
}

message EditUserInfoRequest{
   string IdsID=1;
   //用户姓名
   string UserName=2;
   //性别
   GenderType Gender=3;
   // 个性签名
   string Autograph =4;
   //所在地址
   string Location =5;
}

message EditUserInfoReply{
    int32 Integral = 1; //积分（首次设置用户姓名时返回对应积分，其他情况返回 0）
}

// 请求 - 重置密码 - 验证码验证
message ResetPasswordCheckReq{
    string VerifyCode = 1;   //验证码
}

// 响应 - 重置密码 - 验证码验证
message ResetPasswordCheckResp{
    string ResetToken = 1;   //重置令牌，用于下一步
}

// 请求 - 重置密码 - 立即重置
message ResetPasswordNowReq{
    string ResetToken = 1;   //重置令牌
    string NewPassword = 2; //新密码
}

// 响应 - 重置密码 - 立即重置
message ResetPasswordNowResp{
    //JwtToken Token = 1;   //登录token
}

// 请求 - 检查令牌是否有效
message CheckTokenReq{
    string TokenHash = 1;   //令牌哈希
}



// 响应 - 检查令牌是否有效
message CheckTokenResp{
    TokenStates State = 1;   //无效的
    string TipTitle = 2;   //提示标题
    string TipContent = 3; //提示内容
}

message GetAccountProgressRequest{
    string  CertificationId=1;//User用户的统一认证ID
}

message GetAccountProgressReply{
    ProgressState State=1;// 状态
    string Reason=2;//原因
    string LastNotProcessedPath=3;// 未进行到的下一步骤路径
}

message FixUserNameFromEmailReq{
    
}

message FixUserNameFromEmailResp{
    string Result = 1;
}

message InitLastLoginTimeReq{

}

message InitLastLoginTimeResp{
    int32 Total = 1;    //总用户数
    int32 Updated = 2;  //已更新数
}